##
# (c) 2021 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: On Pull request action

on:
  workflow_call:
    secrets:
      token:
        required: true

jobs:
  on-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@v4
        with:
          repo-token: ${{ secrets.token }}

      # Get the owner repo
      - name: Get owner
        id: getowner
        run: |
          repo_owner=`echo "$GITHUB_REPOSITORY" | cut -f 1 -d "/"`
          repo_name=`echo "$GITHUB_REPOSITORY" | cut -f 2 -d "/"`
          echo "owner=$repo_owner" >> $GITHUB_OUTPUT
          echo "repo_name=$repo_name" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.token }}

      - name: Install yq
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.6.3/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Check if automatic
        id: check_automatic
        run: |
          is_auto=$(yq e '.automatic' OWNERS)
          if [[ "$is_auto" != "true" ]] ; then
            is_auto=false
          fi
          echo "autoapprove=$is_auto" >> $GITHUB_OUTPUT

      - uses: actions/github-script@v6
        if: ${{ steps.check_automatic.outputs.autoapprove == 'true' }}
        with:
          github-token: ${{secrets.token}}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['approved', 'automatic-environment']
            })
      
      - name: Read reviewers from file
        id: reviewers
        if: ${{ steps.check_automatic.outputs.autoapprove != 'true' }}
        run: |
          count=$(yq e '.requiredReviewers' OWNERS)
          reviewers_as_json=$(yq e -j -I=0 '[.reviewers[] | select(. != "${{ github.event.pull_request.user.login }}") ]' OWNERS)
          echo "count=$count" >> $GITHUB_OUTPUT
          echo "as_json=$reviewers_as_json" >> $GITHUB_OUTPUT

      - uses: actions/github-script@v6
        if: ${{ steps.check_automatic.outputs.autoapprove != 'true' }}
        with:
          github-token: ${{secrets.token}}
          script: |
            const reviewers_json=JSON.parse('${{ steps.reviewers.outputs.as_json }}')
            const reviewers_count=${{ steps.reviewers.outputs.count }}
            const actor = '${{ github.event.pull_request.user.login }}'
            
            var reviewers = []
            for ( const rev of reviewers_json ) {
              if ( actor != rev ) {
                reviewers.push(rev)
              }
            }

            github.rest.pulls.requestReviewers({
              pull_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              reviewers: reviewers
            })

            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['approval-required','review-required']
            })