##
# (c) 2021 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Do Promote command

on:
  workflow_call:
    inputs:
      package_name:
        required: false
        type: string
        default: ''
      package_type:
        required: false
        type: string
        default: ''
    secrets:
      token:
        required: true

jobs:
  command:
    runs-on: ubuntu-latest
    steps:
      # Get the owner repo
      - name: Get owner
        id: getowner
        run: |
          repo_owner=`echo "$GITHUB_REPOSITORY" | cut -f 1 -d "/"`
          repo_name=`echo "$GITHUB_REPOSITORY" | cut -f 2 -d "/"`
          echo "owner=$repo_owner" >> $GITHUB_OUTPUT
          echo "repo_name=$repo_name" >> $GITHUB_OUTPUT

      - name: Build Payload Params
        id: params
        continue-on-error: true
        uses: actions/github-script@v6
        with:
          #result-encoding: string
          script: |
            const repo = '${{ steps.getowner.outputs.repo_name }}';
            const repo_owner = '${{ steps.getowner.outputs.owner }}';
            const version = '${{ github.event.client_payload.slash_command.args.named.version }}';
            const env = '${{ github.event.client_payload.slash_command.args.named.env }}';
            const package_name = '${{ inputs.package_name }}';
            const package_type = '${{ inputs.package_type }}';
            from_repo = '${{ github.event.client_payload.slash_command.args.named.issue_repository }}';
            from_issue = '${{ github.event.client_payload.slash_command.args.named.issue_number }}';
            from_author = '${{ github.event.client_payload.slash_command.args.named.author }}';
            
            var rn_in = '';
            var release_name = repo;

            rn_in = '${{ github.event.client_payload.slash_command.args.named.release-name }}'
            if (rn_in === '') {
              rn_in = '${{ github.event.client_payload.slash_command.args.named.release_name }}'
              if (rn_in === '') {
                rn_in = '${{ github.event.client_payload.slash_command.args.named.releasename }}'
              }
            }
            
            if (rn_in !== '') {
              release_name = rn_in;
            }
            const payload = {
              promote: {
                repositoryowner: repo_owner,
                repository: repo,
                environment: env,
                version: version,
                fromissue: from_repo + '#' + from_issue,
                fromauthor: from_author,
                releasename: release_name,
                packagename: package_name,
                packagetype: package_type
              }
            };
            console.log(JSON.stringify(payload));
            return payload;

      # Send event to repository to launch new promotion
      - name: Send Event to Environment Repository
        id: send_event
        uses: peter-evans/repository-dispatch@v2
        with:
          token: "${{ secrets.token }}"
          repository: ${{ steps.getowner.outputs.owner }}/environment-${{ steps.getowner.outputs.owner }}-${{ github.event.client_payload.slash_command.args.named.env }}
          event-type: promote-environment
          client-payload: ${{ steps.params.outputs.result }}

      # Comment issue that started this event
      - name: Comment the Issue
        uses: actions/github-script@v6
        if: steps.params.outputs.outcome == 'success'
        env:
          EVENT_REPO: "${{ steps.getowner.outputs.owner }}/environment-${{ steps.getowner.outputs.owner }}-${{ github.event.client_payload.slash_command.args.named.env }}"
          EVENT_PAYLOAD: '${{ steps.params.outputs.payload }}'
        with:
          github-token: ${{secrets.token}}
          script: |
            const issue_number = "${{ github.event.client_payload.slash_command.args.named.issue_number }}"
            const repository_owner = "${{ steps.getowner.outputs.owner }}"
            const repository = "${{ steps.getowner.outputs.repo_name }}"
            const body = `Event submitted to repository: ${process.env.EVENT_REPO}
            With Payload:
            \`\`\`
            ${process.env.EVENT_PAYLOAD}
            \`\`\`
            `

            github.rest.issues.createComment({
              owner: repository_owner,
              repo: repository,
              issue_number: issue_number,
              body: body
            })

      # Comment issue that started this event
      - name: Comment the Issue with Fail
        uses: actions/github-script@v6
        if: steps.params.outputs.outcome != 'success' && steps.send_event.outputs.outcome != 'success'
        with:
          github-token: ${{secrets.token}}
          script: |
            const issue_number = "${{ github.event.client_payload.slash_command.args.named.issue_number }}"
            const repository_owner = "${{ steps.getowner.outputs.owner }}"
            const repository = "${{ steps.getowner.outputs.repo_name }}"
            const body = `Sorry Event can't be submitted, please check the following:
            - There was an error on building Promotion Payload.
            - There is a missing parameter for the promotion command
            `

            github.rest.issues.createComment({
              owner: repository_owner,
              repo: repository,
              issue_number: issue_number,
              body: body
            })
